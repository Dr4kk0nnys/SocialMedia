{"version":3,"sources":["components/Catalog.tsx","utils/fetch.ts","components/Category.tsx","index.tsx"],"names":["Index","className","style","backgroundColor","href","doFetch","a","url","method","body","fetch","headers","JSON","stringify","rawResponse","json","Category","props","useState","title","link","description","image","posts","setPosts","categoryName","split","pop","useEffect","content","_posts","i","titles","length","links","descriptions","images","push","console","log","shuffle","map","element","index","includes","target","rel","src","alt","ReactDOM","render","StrictMode","path","location","pathname","component","Catalog","document","getElementById"],"mappings":"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","file":"static/js/main.18d4343b.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'css/main.css';\n\nconst Index: React.FC = () => {\n    return (\n        <div className='container-parent catalog-body'>\n            <div className='container-categories'>\n                <div className='category' style={{ backgroundColor: '#0d89a3' }}>\n                    <a className=\"category-link\" href=\"categories/programming\">\n                        <div className='category-link'>\n                            <i className=\"fab fa-python icon\"></i>\n                            <br/>\n                            Programming\n                        </div>\n                    </a>\n                </div>\n\n                <div className=\"category\" style={{ backgroundColor: '#bc053e' }}>\n                    <a className='category-link' href=\"/categories/medicine\">\n                        <i className=\"fas fa-clinic-medical icon\"></i>\n                        <br/>\n                        Medicine\n                    </a>\n                </div>\n\n                <div className=\"category\" style={{ backgroundColor: '#661e6a' }}>\n                    <a className='category-link' href=\"/categories/history\">\n                        <i className=\"fas fa-book icon\"></i>\n                        <br/>\n                        History\n                    </a>\n                </div>\n\n                <div className=\"category\" style={{ backgroundColor: '#377e72' }}>\n                    <a className='category-link' href=\"/categories/finances\">\n                        <i className=\"far fa-money-bill-alt icon\"></i>\n                        <br/>\n                        Finances\n                    </a>    \n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Index;","import { IFetchParameters, IFetchReturn } from \"interfaces/Fetch\";\n\nconst doFetch = async({ url, method, body }: IFetchParameters): Promise<IFetchReturn> => {\n    const rawResponse = await fetch('http://localhost:8000/' + url, {\n        method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n    })\n    return await rawResponse.json();\n}\n\nexport { doFetch };","import React, { useEffect, useState } from 'react';\nimport { shuffle } from 'lodash';\n\nimport ICategoryProps from 'interfaces/Category';\n\nimport { doFetch } from 'utils/fetch';\n\nconst Category: React.FC<ICategoryProps> = (props: ICategoryProps) => {\n    const [posts, setPosts] = useState([{ title: '', link: '', description: '', image: '' }]);\n\n    const categoryName = props.categoryName.split('/').pop();\n\n    useEffect(() => {\n        if (!categoryName) return;\n\n        (async () => {\n            const content = await doFetch({ url: 'categories/' + categoryName, method: 'get' });\n\n            const _posts: { title: string, link: string, description: string, image: string }[] = [];\n            for (let i = 0; i < content.titles.length; i++) {\n                const title = content.titles[i];\n                const link = content.links[i];\n                const description = content.descriptions[i];\n                const image = content.images[i];\n\n                _posts.push({ title, link, description, image });\n            }\n            console.log(_posts);\n            \n            setPosts(shuffle(_posts));\n        })();\n    }, [categoryName]);\n\n    const whereIsLinkFrom = (link: string) => {\n        if (link.includes('youtube')) return 'youtube';\n        if (link.includes('twitter')) return 'twitter';\n        if (link.includes('reddit')) return 'reddit';\n        if (link.includes('amazon')) return 'amazon';\n        if (link.includes('podcast')) return 'spotify';\n\n        return 'google';\n    }\n\n    const hasImage = (image: string) => {\n        if (image === '' || image === 'image') return 'no-image';\n        return 'has-image';\n    }\n\n    return (\n        <div className='container-parent categories-body'>\n\n            <div className='breadcrumb'>\n                <span className='link'>\n                    <a className='categories-link' href=\"/\">/categories/</a>\n                    <a className='categories-name' href={'/categories/' + categoryName}>{categoryName}</a>\n                </span>\n            </div>\n\n            <div className=\"container-posts\">\n                {posts.map((element, index) => {\n                    return (\n                        <div key={element.title + index} className={hasImage(posts[index].image) + ' container-post ' + whereIsLinkFrom(posts[index].link)}>\n                            <a target='_blank' rel='noreferrer' href={posts[index].link}>\n                                <div className='post'>\n                                    <div className=\"post-content\">\n                                        <h2>{posts[index].title}</h2>\n                                        <p>{posts[index].description}</p>\n                                    </div>\n                                    {posts[index].image !== '' && posts[index].image !== 'image' ? <img src={posts[index].image} alt=\"No preview available.\"/> : ''}\n                                </div>\n                            </a>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Category;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Catalog from 'components/Catalog';\nimport Category from 'components/Category';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Switch>\n                <Route path='/categories/:categoryName/' render={(props) => <Category categoryName={props.location.pathname} />} />\n                <Route path='/' component={Catalog} />\n            </Switch>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}